'use client';

import Link from 'next/link';

export default function AboutPage() {
  return (
    <div className="container mx-auto p-4 max-w-3xl">
      <h1 className="text-2xl font-bold mb-4">Комментарии</h1>
      <p className="mb-4">
        Здравствуйте. Задание любопытное, мне понравилось. Воспринял как обычную таску, просто взял
        и сделал. Приколы NextJs тут в принципе почти не используются, но по фану добавил SSR
        страницу. С остальным повозился с удовольствием.
      </p>
      <ul className="mb-4">
        <li>
          Деплой проекта: <a href="https://www.google.com"> Здесь </a>
        </li>
        <li>
          Репозиторий: <a href="https://github.com/tedgregory"> Github</a>
        </li>
      </ul>
      <p className="mb-4">
        Я постарался не фантазировать лишнего, но строго выполнить требования задания.
      </p>
      <ul className="list-disc list-inside mb-4 space-y-2">
        <li>Реакт понизил до 18, т.к. в требованиях именно 18^;</li>
        <li>
          Со стилями долго не возился, в tailwind накинул парочку кастомных слассов, тему не
          кастомизировал, докинул autoprefixer; Автоматически сначала добавил SASS, потом убрал, я
          знаю, что Tailwind с ним рекомендуют не совмещать, уже натыкался на эти проблемы;
        </li>
        <li>докинул линтеры от себя, конфиги стандартные, husky;</li>
        <li>форматирование кода автоматическое, я так привык, и так быстрее;</li>
        <li>сделал TS как я люблю, например PropsType в модульном скоупе с единым названием;</li>
        <li>
          Сначала думал сделать универсальный BooksList компонент, но пришлось бы прокидывать лишние
          параметры и это бы сильно спутало список и Book компонент, поэтому разделил SearchList и
          BookList;
        </li>
        <li>
          добавил SSR страницу{' '}
          <Link href="/ssr-books?q=tom" className="text-blue-500 underline">
            ssr-books?q=tom
          </Link>
          ;
        </li>
        <li>
          чтобы избавиться от SSR Hydration mismatch, добавил хук isMounted в карточку (т.к. кнопка
          на сервере не успевает узнать isInReadingList клииентского store);
        </li>
        <li>
          Пришлось повозиться с типизацией пропсов в серверном компоненте, не хотел билдиться,
          просто в итоге заэкстендил Promise, интуитивно
          <pre>{'type PropsType = { searchParams: Promise<{ q?: string }> };'}</pre>
        </li>
        <li>вынес API_LIMIT в .env.local конфиг, опционально оверрайдится;</li>
        <li>
          c Git не разводил балет, сделал одну feature-ветку, коммитил пачками, не всегда логичными,
          но в свое оправдание замечу, что не было требования атомарности коммитов.
        </li>
      </ul>
      <p className="mb-4"></p>

      <p className="mb-4">
        Времени заняло около 6 часов, включая написание этого текста, рефактор, деплой (Это
        основное, без SSR). Пользовался нейронками, конечно, в основном как справочниками (у них нет
        стиля и они репродуцируют чужие странности, но для понимания - удобно и быстро).
      </p>
      <p className="mb-4">Поэтому, расчитываю на фидбэк, хотябы на 80% написанный человеком.</p>
    </div>
  );
}
